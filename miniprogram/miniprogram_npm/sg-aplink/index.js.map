{"version":3,"sources":["index.js","smartaplink_lib/ap-linker.js","smartaplink_lib/logger.js","smartaplink_lib/utils.js","smartaplink_lib/ap-configer.js","smartaplink_lib/encryptor.js","smartaplink_lib/ap-httper.js","smartaplink_lib/ap-udper.js","smartaplink_lib/device-discovery.js","smartaplink_lib/device-mdns-discovery.js","smartaplink_lib/device-smartlink-discovery.js","smartaplink_lib/constant.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,ACHA,ACHA,ACHA;AHUA,AIZA,AHSA,ACHA,ACHA;AHUA,AIZA,AHSA,ACHA,ACHA;AHUA,AIZA,AHSA,ACHA,ACHA;AHUA,AIZA,AHSA,AIZA,AHSA,ACHA;AHUA,AIZA,AHSA,AIZA,AHSA,ACHA;AHUA,AIZA,AHSA,AIZA,AFMA;AHUA,AIZA,AENA,ALeA,AIZA,AFMA;AHUA,AIZA,AENA,ALeA,AIZA,AFMA;AHUA,AIZA,AENA,ALeA,AIZA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AFMA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AFMA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AFMA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,AHSA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,AHSA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,AHSA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,AJYA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,AJYA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,AJYA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AIZA,AHSA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AIZA,AHSA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AIZA,AHSA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AIZA,AHSA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AIZA,AHSA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,ACHA,ACHA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;AHUA,AIZA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,ALeA,AFMA;ACFA,AENA,ALeA,AMlBA,AENA,ACHA,APqBA;AGRA,ALeA,AMlBA,AENA,ACHA,APqBA;AGRA,ALeA,AMlBA,AENA,ACHA,APqBA;AFOA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AMlBA,AENA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA,ACHA;AT4BA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA,AQxBA;ARyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["const ApLinker = require('/smartaplink_lib/ap-linker.js');\nconst aplinker = new ApLinker();\n\n/**\n * 初始化\n * return Primiss有可能初始化失败\n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function init() {\n    return aplinker.init();\n};exports.init = init\n\n/**\n * 这个就是调用了微信的wx.getConnectedWifi\n * @param callback({\n          success: true,\n          res: res\n        });\n * @returns \n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function getConnectedWifi(callback) {\n    return aplinker.getConnectedWifi(callback)\n};exports.getConnectedWifi = getConnectedWifi\n\n/**\n   * 启动发现设备\n   * object: {apSsid: string[option], onDeviceFound: function}\n   */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function startDeviceDiscovery(obj) {\n    return aplinker.startDeviceDiscovery(obj);\n};exports.startDeviceDiscovery = startDeviceDiscovery\n\n/**\n * 停止搜索设备\n * @returns \n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function stopDeviceDiscovery() {\n    return aplinker.stopDeviceDiscovery();\n};exports.stopDeviceDiscovery = stopDeviceDiscovery\n\n/**\n   * options: {\n   *  wifiSsid: string, the ssid of conected wifi\n   *  wifiPassword: string, the password of connected wifi\n   *  apSsid: string, the ssid of ap\n   *  userData: [option]\n   * }\n   */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function start(options) {\n    return aplinker.start(options);\n};exports.start = start\n\n/**\n * 停止配网\n * @returns Promiss\n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function stop() {\n    return aplinker.stop\n};exports.stop = stop\n\n/**\n * 销毁\n */\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function destroy() {\n    return aplinker.destroy();\n};exports.destroy = destroy\n\n\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function listenWifiStateChange(callback) {\n    return aplinker.listenWifiStateChange(callback);\n};exports.listenWifiStateChange = listenWifiStateChange\n\nif (!exports.__esModule) Object.defineProperty(exports, \"__esModule\", { value: true });function unlistenWifiStateChange() {\n    return aplinker.unlistenWifiStateChange();\n};exports.unlistenWifiStateChange = unlistenWifiStateChange\n\nmodule.exports = {\n    init: init,\n    getConnectedWifi: aplinker.getConnectedWifi,\n    start: start,\n    stop: stop,\n    startDeviceDiscovery: startDeviceDiscovery,\n    stopDeviceDiscovery: stopDeviceDiscovery,\n    destroy: destroy,\n    unlistenWifiStateChange: unlistenWifiStateChange,\n    listenWifiStateChange: listenWifiStateChange\n}","const Promise = require('es6-promise').Promise;\r\nconst logger = require('./logger.js');\r\nconst utils = require('./utils.js');\r\nconst ApConfiger = require('./ap-configer.js');\r\nconst DeviceDiscovery = require('./device-discovery.js');\r\n\r\nmodule.exports = function () {\r\n\r\n  var TAG = 'smartaplink_lib.commons.ap-linker.{0}:'\r\n\r\n  var apSsid;\r\n  var wifiSsid;\r\n  var wifiPasssword;\r\n  var userData = '';\r\n  var successCallback;\r\n  var progressCallback;\r\n  var getConnectedWifiInterval = -1;\r\n  var self = this;\r\n  var started = false;\r\n  var apConfiger = new ApConfiger();\r\n  var deviceDiscovery = new DeviceDiscovery();\r\n\r\n  var startWifi = function () {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n\r\n      wx.startWifi({\r\n\r\n        success: function (res) {\r\n\r\n          logger.log(TAG.format('startWifi'), 'start wifi success -', JSON.stringify(res));\r\n          resolve(true);\r\n        },\r\n        fail: function (res) {\r\n\r\n          logger.warn(TAG.format('startWifi'), 'start wifi fail -', JSON.stringify(res));\r\n          resolve(false);\r\n        }\r\n      })\r\n    });\r\n  };\r\n\r\n  var stopWifi = function () {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n\r\n      wx.stopWifi({\r\n\r\n        success: function (res) {\r\n\r\n          logger.log(TAG.format('stopWifi'), 'stop wifi success -', JSON.stringify(res));\r\n          resolve(true);\r\n        },\r\n        fail: function (res) {\r\n\r\n          logger.warn(TAG.format('stopWifi'), 'stop wifi fail -', JSON.stringify(res));\r\n          resolve(false);\r\n        }\r\n      })\r\n    });\r\n  };\r\n\r\n  var checkApConnection = function (wifiInfo) {\r\n\r\n    return new Promise(function (resolve, reject) {\r\n\r\n      logger.log(TAG.format('checkApConnection'), 'start to check ap connection', JSON.stringify(wifiInfo));\r\n\r\n      progress(self.state.CHECK_AP_CONNECTION);\r\n\r\n      var count = 0;\r\n\r\n      var checkApConnectionInterval = setInterval(function () {\r\n\r\n        if (count >= 120) {\r\n\r\n          clearInterval(checkApConnectionInterval);\r\n          reject(self.state.CHECK_AP_CONNECTION);\r\n        } else {\r\n\r\n          self.getConnectedWifi(function (result) {\r\n\r\n            logger.log(TAG.format('checkApConnection'), JSON.stringify(result));\r\n\r\n            if (result['success']) {\r\n\r\n              if (result['res']['wifi']['SSID'] === wifiInfo.SSID) {\r\n\r\n                logger.log(TAG.format('checkApConnection'), 'check ap connection succeed', JSON.stringify(wifiInfo));\r\n                clearInterval(checkApConnectionInterval);\r\n                resolve();\r\n              }\r\n            }\r\n\r\n            count++;\r\n          });\r\n        }\r\n      }, 500);\r\n    });\r\n  };\r\n\r\n  var configAp = function () {\r\n\r\n    logger.info(TAG.format('configAp'));\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      progress(self.state.CONFIG_AP);\r\n\r\n      apConfiger.configAp(apSsid, wifiSsid, wifiPasssword, userData)\r\n        .then(res => {\r\n          logger.info(TAG.format('configAp'), 'config ap succeed:', JSON.stringify(res));\r\n          resolve();\r\n        }).catch(e => {\r\n          logger.error(TAG.format('configAp'), 'catch exception:', JSON.stringify(e));\r\n          reject(self.state.CONFIG_AP);\r\n        });\r\n    });\r\n  };\r\n\r\n  var success = function () {\r\n\r\n    if (typeof successCallback === 'function') {\r\n\r\n      try {\r\n        successCallback();\r\n      } catch (e) { }\r\n    }\r\n  };\r\n\r\n  var fail = function (code, message, data) {\r\n\r\n    if (typeof failCallback === 'function') {\r\n\r\n      try {\r\n        failCallback({\r\n          code: code,\r\n          msg: message,\r\n          data: data\r\n        });\r\n      } catch (e) { }\r\n    }\r\n  };\r\n\r\n  var progress = function (state) {\r\n\r\n    if (typeof progressCallback === 'function') {\r\n\r\n      try {\r\n        progressCallback({\r\n          name: state['name'],\r\n          description: state['description']\r\n        });\r\n      } catch (e) { }\r\n    }\r\n  };\r\n\r\n  this.state = {\r\n    VALIDATE_PARAMS: {\r\n      name: 'VALIDATE_PARAMS',\r\n      description: '正在检查参数',\r\n      error: {\r\n        code: -10000,\r\n        msg: '参数错误'\r\n      }\r\n    },\r\n    SCAN_AP: {\r\n      name: 'SCAN_AP',\r\n      description: '正在搜索设备AP',\r\n      error: {\r\n        code: -10001,\r\n        msg: '未搜索到设备AP'\r\n      }\r\n    },\r\n    CONNECT_AP: {\r\n      name: 'CONNECT_AP',\r\n      description: '正在连接设备AP',\r\n      error: {\r\n        code: -10002,\r\n        msg: '连接设备AP失败'\r\n      }\r\n    },\r\n    SCAN_ORIGINAL_WIFI: {\r\n      name: 'SCAN_ORIGINAL_WIFI',\r\n      description: '正在回连手机Wi-Fi',\r\n      error: {\r\n        code: -10003,\r\n        msg: '回连手机Wi-Fi失败'\r\n      }\r\n    },\r\n    CONNECT_ORIGINAL_WIFI: {\r\n      name: 'CONNECT_ORIGINAL_WIFI',\r\n      description: '正在回连手机Wi-Fi',\r\n      error: {\r\n        code: -10004,\r\n        msg: '回连手机Wi-Fi失败'\r\n      }\r\n    },\r\n    CONFIG_AP: {\r\n      name: 'CONFIG_AP',\r\n      description: '正在配置设备',\r\n      error: {\r\n        code: -10005,\r\n        msg: '配置设备信息失败'\r\n      }\r\n    },\r\n    TASK_ALREADY_EXIST: {\r\n      name: 'TASK_ALREADY_EXIST',\r\n      description: '已有一个设备配置任务正在进行中',\r\n      error: {\r\n        code: -10006,\r\n        msg: '已有一个设备配置任务正在进行中'\r\n      }\r\n    },\r\n    TASK_CANCEL: {\r\n      name: 'TASK_CANCEL',\r\n      description: '已取消配置设备',\r\n      error: {\r\n        code: -10007,\r\n        msg: '已取消配置设备'\r\n      }\r\n    },\r\n    CHECK_AP_CONNECTION: {\r\n      name: 'CHECK_AP_CONNECTION',\r\n      description: '正在检测设备AP连接',\r\n      error: {\r\n        code: -10008,\r\n        msg: '检测设备AP连接失败'\r\n      }\r\n    },\r\n    CHECK_ORIGINAL_WIFI_CONNECTION: {\r\n      name: 'CHECK_ORIGINAL_WIFI_CONNECTION',\r\n      description: '正在检测手机Wi-Fi连接',\r\n      error: {\r\n        code: -10009,\r\n        msg: '检测手机Wi-Fi连接失败'\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 启动发现设备\r\n   * object: {apSsid: string[option], onDeviceFound: function}\r\n   */\r\n  this.startDeviceDiscovery = function (object) {\r\n    deviceDiscovery.startDeviceDiscovery(object);\r\n  }\r\n\r\n  /**\r\n   * 停止发现设备\r\n   */\r\n  this.stopDeviceDiscovery = function () {\r\n    deviceDiscovery.stopDeviceDiscovery();\r\n  }\r\n\r\n  /**\r\n   * 已废弃，请使用 stopDeviceDiscovery() 替代\r\n   */\r\n  this.stopScanDeviceDiscovery = this.stopDeviceDiscovery;\r\n\r\n  /**\r\n   * options: {\r\n   *  wifiSsid: string, the ssid of conected wifi\r\n   *  wifiPassword: string, the password of connected wifi\r\n   *  apSsid: string, the ssid of ap\r\n   *  userData: [option]\r\n   * }\r\n   */\r\n  this.start = function (options) {\r\n\r\n    if (started) {\r\n\r\n      fail(self.state.TASK_ALREADY_EXIST.error.code, self.state.TASK_ALREADY_EXIST.error.msg);\r\n      return;\r\n    }\r\n\r\n    if (typeof options !== 'object') {\r\n      return;\r\n    }\r\n\r\n    wifiSsid = options.wifiSsid;\r\n    wifiPasssword = utils.isEmpty(options.wifiPassword) ? '' : options.wifiPassword;\r\n    apSsid = options.apSsid;\r\n    userData = utils.isEmpty(options.userData) ? '' : options.userData;\r\n    successCallback = options.success;\r\n    progressCallback = options.progress;\r\n    failCallback = options.fail;\r\n\r\n    var paramsError = {};\r\n    if (utils.isEmpty(wifiSsid)) {\r\n      paramsError['wifiSsid'] = 'wifiSsid is empty';\r\n    }\r\n\r\n    if (utils.isEmpty(apSsid)) {\r\n      paramsError['apSsid'] = 'apSsid is empty';\r\n    }\r\n\r\n    if (Object.keys(paramsError).length) {\r\n\r\n      logger.info('abort to start AP link, invalid parameters: ', JSON.stringify(paramsError));\r\n      fail(self.state.VALIDATE_PARAMS.error.code, self.state.VALIDATE_PARAMS.error.msg, paramsError);\r\n      return;\r\n    }\r\n\r\n    started = true;\r\n\r\n    checkApConnection({\r\n      SSID: apSsid\r\n    })\r\n      .then(() => {\r\n        return configAp();\r\n      })\r\n      .then(() => {\r\n\r\n        logger.info(TAG.format('start'), 'the whole ap link task is succeed');\r\n        self.stop();\r\n        success();\r\n      })\r\n      .catch(e => {\r\n\r\n        logger.warn(TAG.format('start'), 'catch exception', JSON.stringify(e));\r\n        self.stop();\r\n        if (e && e.error && e.error.code != self.state.TASK_CANCEL.error.code) {\r\n          fail(e.error.code, e.error.msg);\r\n        }\r\n      });\r\n  };\r\n\r\n  this.stop = function () {\r\n    started = false;\r\n  };\r\n\r\n  this.init = async function () {\r\n    return await startWifi();\r\n  };\r\n\r\n  this.destroy = async function () {\r\n\r\n    this.stop();\r\n\r\n    if (getConnectedWifiInterval != -1) {\r\n      clearInterval(getConnectedWifiInterval);\r\n      getConnectedWifiInterval = -1;\r\n    }\r\n    return await stopWifi();\r\n  };\r\n\r\n  this.getConnectedWifi = function (callback) {\r\n\r\n    wx.getConnectedWifi({\r\n      success: function (res) {\r\n        callback({\r\n          success: true,\r\n          res: res\r\n        });\r\n      },\r\n      fail: function (res) {\r\n        callback({\r\n          success: false,\r\n          res: res\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  this.listenWifiStateChange = function (callback) {\r\n\r\n    this.unlistenWifiStateChange();\r\n    var previousWifi = null;\r\n    var wifiNotStarted = 0;\r\n\r\n    var wifiInfoCallback = function (result) {\r\n\r\n      var wifi = false;\r\n\r\n      // logger.log(TAG.format('getConnectedWifiInterval'), JSON.stringify(result));\r\n\r\n      if (!result['success'] &&\r\n        (result['res']['errCode'] == 12000 || result['res']['errMsg'].indexOf('开发者工具暂时不支持') != -1)) {\r\n\r\n        wifiNotStarted++;\r\n\r\n        if (wifiNotStarted >= 10) {\r\n\r\n          clearInterval(getConnectedWifiInterval);\r\n          getConnectedWifiInterval = -1;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (started) {\r\n        previousWifi = null;\r\n        return;\r\n      }\r\n\r\n      wifiNotStarted = 0;\r\n\r\n      if (result['success']) {\r\n        wifi = result['res']['wifi']['SSID'];\r\n      }\r\n      if (wifi != previousWifi) {\r\n\r\n        if (typeof callback === 'function') {\r\n\r\n          try {\r\n            callback(result['success'], result['res']);\r\n          } catch (e) { }\r\n        }\r\n\r\n        previousWifi = wifi;\r\n      }\r\n    }\r\n\r\n    var action = function () {\r\n      self.getConnectedWifi(wifiInfoCallback);\r\n    };\r\n\r\n    getConnectedWifiInterval = setInterval(action, 1500);\r\n\r\n    action();\r\n  };\r\n\r\n  this.unlistenWifiStateChange = function () {\r\n\r\n    if (getConnectedWifiInterval != -1) {\r\n      clearInterval(getConnectedWifiInterval);\r\n      getConnectedWifiInterval = -1;\r\n    }\r\n  };\r\n};","function Logger() {\r\n\r\n  var _logger = console;\r\n\r\n  this.log = _logger.log;\r\n  this.info = _logger.info;\r\n  this.warn = _logger.warn;\r\n  this.error = _logger.error;\r\n}\r\n\r\nmodule.exports = new Logger();","/**\r\n * var template1=\"I'm {0}，I'm {1} years old\";\r\n * var template2=\"I'm {name}，I'm {age} years old\";\r\n * var result1=template1.format(\"loogn\",22);\r\n * var result2=template2.format({name:\"loogn\",age:22});\r\n * @param args\r\n * @returns {String}\r\n */\r\nString.prototype.format = function (args) {\r\n  var result = this;\r\n  if (arguments.length > 0) {\r\n    if (arguments.length == 1 && typeof (args) == \"object\") {\r\n      for (var key in args) {\r\n        if (args[key] != undefined) {\r\n          var reg = new RegExp(\"({\" + key + \"})\", \"g\");\r\n          result = result.replace(reg, args[key]);\r\n        }\r\n      }\r\n    } else {\r\n      for (var i = 0; i < arguments.length; i++) {\r\n        if (arguments[i] != undefined) {\r\n          var reg = new RegExp(\"({)\" + i + \"(})\", \"g\");\r\n          result = result.replace(reg, arguments[i]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nmodule.exports = {\r\n\r\n  isEmpty: function (text) {\r\n\r\n    return text === undefined || text == null;\r\n  },\r\n  isBlank: function (text) {\r\n\r\n    return this.isEmpty(text) || text.toString().trim().length == 0;\r\n  },\r\n  isNotBlank: function (text) {\r\n    return !this.isBlank(text);\r\n  },\r\n\r\n  isMatched: function (text2Match, matchingText, matching) {\r\n\r\n    if (this.isEmpty(text2Match)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.isEmpty(matchingText)) {\r\n      return true;\r\n    }\r\n\r\n    var matchingRules = ['left', 'right', 'center', 'full'];\r\n    if (matchingRules.indexOf(matching) == -1) {\r\n      matching = 'full';\r\n    }\r\n\r\n    if (matching === 'left') {\r\n      return new RegExp('^{0}.*'.format(matchingText)).test(text2Match);\r\n    } else if (matching === 'right') {\r\n      return new RegExp('.*{0}$'.format(matchingText)).test(text2Match);\r\n    } else if (matching === 'center') {\r\n      return new RegExp('.*{0}.*'.format(matchingText)).test(text2Match);\r\n    } else if (matching === 'full') {\r\n      return text2Match === matchingText;\r\n    }\r\n  },\r\n\r\n  compareVersion: function(v1, v2) {\r\n    \r\n    v1 = v1.split('.')\r\n    v2 = v2.split('.')\r\n    const len = Math.max(v1.length, v2.length)\r\n\r\n    while (v1.length < len) {\r\n      v1.push('0')\r\n    }\r\n    while (v2.length < len) {\r\n      v2.push('0')\r\n    }\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      const num1 = parseInt(v1[i])\r\n      const num2 = parseInt(v2[i])\r\n\r\n      if (num1 > num2) {\r\n        return 1\r\n      } else if (num1 < num2) {\r\n        return -1\r\n      }\r\n    }\r\n\r\n    return 0\r\n  }\r\n\r\n};","const Promise = require('es6-promise').Promise;\r\nvar logger = require('./logger.js');\r\nvar utils = require('./utils.js');\r\nconst Encryptor = require('./encryptor.js');\r\nconst ApHttper = require('./ap-httper.js');\r\nconst ApUdper = require('./ap-udper.js');\r\n\r\nmodule.exports = function () {\r\n\r\n  var TAG = 'smartaplink_lib.commons.ap-configer';\r\n  var encryptor = null;\r\n  var apHttper = new ApHttper();\r\n  var apUdper = new ApUdper();\r\n\r\n  var setAp = function (apNetter, wifiSsid, wifiPasssword, userData) {\r\n\r\n    logger.info(TAG, 'configAp->setAp');\r\n\r\n    var setConfigRequest = {\r\n      CID: 30005,\r\n      PL: {\r\n        SSID: wifiSsid,\r\n        Password: wifiPasssword,\r\n        Userdata: userData\r\n      }\r\n    };\r\n\r\n    return apNetter.post(setConfigRequest);\r\n  };\r\n\r\n  var restartAp = function (apNetter) {\r\n\r\n    logger.info(TAG, 'configAp->restartAp');\r\n\r\n    var restartRequest = {\r\n      CID: 30007,\r\n      PL: null\r\n    }\r\n\r\n    return apNetter.post(restartRequest);\r\n  }\r\n\r\n  var configTask = function (apNetter, wifiSsid, wifiPasssword, userData) {\r\n\r\n    return setAp(apNetter, wifiSsid, wifiPasssword, userData)\r\n      .then(res => {\r\n        return restartAp(apNetter);\r\n      }).then(res => {\r\n        return Promise.reject(true);\r\n      }).catch(res => {\r\n        if (res === true) {\r\n\r\n          logger.info(TAG, 'configTask', apNetter.name, 'succeed');\r\n          return Promise.reject(true);\r\n        } else {\r\n          logger.warn(TAG, 'configTask', apNetter.name, 'failed');\r\n          return Promise.resolve(false);\r\n        }\r\n      });\r\n  }\r\n\r\n  this.configAp = function (apSsid, wifiSsid, wifiPasssword, userData) {\r\n\r\n    encryptor = new Encryptor(apSsid);\r\n    var apNetters = [apHttper, apUdper];\r\n    var configTasks = [];\r\n\r\n    for (var i = 0; i < apNetters.length; i++) {\r\n\r\n      apNetters[i].init({\r\n        encryptor: encryptor\r\n      });\r\n      configTasks.push(configTask(apNetters[i], wifiSsid, wifiPasssword, userData));\r\n    }\r\n\r\n    return Promise.all(configTasks).then(res => {\r\n\r\n      return Promise.reject(false);\r\n    }).catch(res => {\r\n\r\n      if (res) {\r\n        return Promise.resolve(res);\r\n      } else {\r\n        return Promise.reject();\r\n      }\r\n    }).finally(() => {\r\n\r\n      for (var i = 0; i < apNetters.length; i++) {\r\n        apNetters[i].destroy();\r\n      }\r\n    });\r\n  };\r\n};","var md5 = require('md5');\r\nvar aesjs = require('aes-js');\r\nvar base64js = require('base64-js');\r\nvar logger = require('logger.js');\r\n\r\nfunction Encryptor(key) {\r\n\r\n  var aesKey = md5(key).substr(0, 32);\r\n  var aesKeyBytes = aesjs.utils.hex.toBytes(aesKey);\r\n\r\n  this.encrypt = function (plainText) {\r\n\r\n    var tag = 'commons.Encryptor.encrypt:';\r\n    logger.log(tag, 'plainText -', plainText);\r\n    var plainTextBytes = aesjs.utils.utf8.toBytes(plainText);\r\n    logger.log(tag, 'plainTextBytes -', aesjs.utils.hex.fromBytes(plainTextBytes));\r\n    plainTextBytes = addPaddingBytes(plainTextBytes);\r\n\r\n    logger.log(tag, 'aesKeyBytes -', aesjs.utils.hex.fromBytes(aesKeyBytes));\r\n\r\n    var aesCbc = new aesjs.ModeOfOperation.cbc(aesKeyBytes, aesKeyBytes);\r\n    var encryptedBytes = aesCbc.encrypt(plainTextBytes);\r\n    logger.log(tag, 'encryptedBytes -', aesjs.utils.hex.fromBytes(encryptedBytes));\r\n\r\n    var base64Text = base64js.fromByteArray(encryptedBytes);\r\n    logger.log(tag, 'base64Text -', base64Text);\r\n\r\n    return base64Text;\r\n  };\r\n\r\n  this.decrypt = function (encryptedText) {\r\n\r\n    var tag = 'commons.Encryptor.decrypt:';\r\n    logger.log(tag, 'encryptedText -', encryptedText);\r\n\r\n    var encryptedBytes = base64js.toByteArray(encryptedText);\r\n    logger.log(tag, 'encryptedBytes -', aesjs.utils.hex.fromBytes(encryptedBytes));\r\n\r\n    logger.log(tag, 'aesKeyBytes -', aesjs.utils.hex.fromBytes(aesKeyBytes));\r\n\r\n    var aesCbc = new aesjs.ModeOfOperation.cbc(aesKeyBytes, aesKeyBytes);\r\n    var decryptedBytes = aesCbc.decrypt(encryptedBytes);\r\n    logger.log(tag, 'decryptedBytes -', aesjs.utils.hex.fromBytes(decryptedBytes));\r\n\r\n    decryptedBytes = removePaddingBytes(decryptedBytes);\r\n    var plainText = aesjs.utils.utf8.fromBytes(decryptedBytes);\r\n    logger.log(tag, 'plainText -\"', plainText, '\"');\r\n\r\n    return plainText;\r\n  };\r\n  \r\n\r\n  var addPaddingBytes = function(plain) {\r\n\r\n    var size = plain.length;\r\n    var remainder = size % 16;\r\n    if (remainder == 0) {\r\n      return plain;\r\n    }\r\n\r\n    var _plain = new Uint8Array(size + 16 - remainder);\r\n    _plain.set(plain);\r\n\r\n    return _plain;\r\n  }\r\n\r\n  var removePaddingBytes = function(padding) {\r\n\r\n    var index = -1;\r\n    for(var i = padding.length - 1; i > -1; i--) {\r\n\r\n      if(padding[i] == 0) {\r\n        index = i;\r\n      }else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (index == -1) {\r\n      return padding;\r\n    } else {\r\n      var plain = new Uint8Array(index);\r\n      aesjs._arrayTest.copyArray(padding, plain, 0, 0, index);\r\n      return plain;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = Encryptor;","const Promise = require('es6-promise').Promise;\r\nvar logger = require('./logger.js');\r\nvar utils = require('./utils.js');\r\n\r\nmodule.exports = function() {\r\n\r\n  var TAG = 'smartaplink_lib.commons.ap-httper';\r\n  var encryptor = null;\r\n  var stop = false;\r\n  \r\n  this.name = \"ap-httper\";\r\n\r\n  this.init = function(obj) {\r\n    encryptor = obj.encryptor;\r\n    stop = false;\r\n  };\r\n\r\n  this.post = function(body) {\r\n\r\n    var tag = TAG + '.post:';\r\n    var bodyText = JSON.stringify(body);\r\n    logger.info(tag, 'plain body -', bodyText);\r\n\r\n    var encryptedBody = encryptor.encrypt(bodyText);\r\n    logger.info(tag, 'encrypted body -', encryptedBody);\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      var times = 0;\r\n\r\n      var postAction = function(_body) {\r\n\r\n        if(stop) {\r\n          return;\r\n        }\r\n\r\n        if (times++ >= 5) {\r\n          reject();\r\n          return;\r\n        }\r\n\r\n        logger.log(tag, 'postAction: No.' + times, 'times');\r\n\r\n        wx.request({\r\n          url: 'http://10.10.100.254?linkType=wechatMiniApLink',\r\n          data: _body,\r\n          header: {\r\n            \"Content-Type\": \"text/plain; charset=UTF-8\"\r\n          },\r\n          method: 'POST',\r\n          dataType: 'text',\r\n          responseType: 'text',\r\n          timeout: 8000 + times * 1000,\r\n          success: function(res) {\r\n\r\n            logger.log('ApHttper.post success:', JSON.stringify(res));\r\n\r\n            if (res['statusCode'] == 200) {\r\n\r\n              try {\r\n\r\n                var response = JSON.parse(encryptor.decrypt(res['data']));\r\n                if (response['RC'] == 0) {\r\n                  resolve(response);\r\n                  return;\r\n                }\r\n              } catch (e) {\r\n                logger.error(JSON.stringify(e));\r\n              }\r\n            }\r\n\r\n            postAction(_body);\r\n          },\r\n          fail: function(res) {\r\n            logger.log('ApHttper.post fail:', JSON.stringify(res));\r\n            postAction(_body);\r\n          }\r\n        });\r\n      };\r\n\r\n      postAction(encryptedBody);\r\n    });\r\n  };\r\n\r\n  this.destroy = function() {\r\n    stop = true;\r\n    logger.info(TAG, 'destroy');\r\n  };\r\n};","const Unibabel = require('browserify-unibabel');\r\nconst Promise = require('es6-promise').Promise;\r\nconst logger = require('./logger.js');\r\nconst utils = require('./utils.js');\r\n\r\nmodule.exports = function() {\r\n\r\n  var TAG = 'smartaplink_lib.commons.ap-udper';\r\n\r\n  var encryptor = null;\r\n  var socket = wx.createUDPSocket();\r\n  var onResponsedSucceed = null;\r\n  var intervalId = -1;\r\n  var onMessageCallback = function(res) {\r\n\r\n    var uint8Array = new Uint8Array(res['message']);\r\n    var message = Unibabel.utf8ArrToStr(uint8Array).trim();\r\n\r\n    res['message'] = message;\r\n    logger.log(TAG, 'socket.onMessage:', JSON.stringify(res));\r\n\r\n    try {\r\n\r\n      var response = JSON.parse(encryptor.decrypt(res['message']));\r\n      if (response['RC'] == 0) {\r\n\r\n        if (onResponsedSucceed) {\r\n          onResponsedSucceed.call(this, response);\r\n        }\r\n      }\r\n    } catch (e) {\r\n      logger.error(JSON.stringify(e));\r\n    }\r\n  };\r\n\r\n  this.name = \"ap-udper\";\r\n\r\n  this.init = function(obj) {\r\n    clearInterval(intervalId);\r\n    encryptor = obj.encryptor;\r\n    socket.onMessage(onMessageCallback);\r\n    socket.bind();\r\n  };\r\n\r\n  this.post = function (body) {\r\n\r\n    clearInterval(intervalId);\r\n\r\n    var tag = TAG + '.post:';\r\n    var bodyText = JSON.stringify(body);\r\n    logger.info(tag, 'plain body -', bodyText);\r\n\r\n    var encryptedBody = encryptor.encrypt(bodyText);\r\n    logger.info(tag, 'encrypted body -', encryptedBody);\r\n\r\n    return new Promise(function(resolve, reject) {\r\n\r\n      var times = 0;\r\n\r\n      var postAction = function(_body) {\r\n\r\n        times++;\r\n        logger.log(TAG, 'postAction: No.' + times, 'times');\r\n\r\n        socket.send({\r\n          address: '10.10.100.254',\r\n          port: 48887,\r\n          message: _body\r\n        });\r\n      };\r\n\r\n      intervalId = setInterval(() => {\r\n\r\n        if (times >= 10) {\r\n          reject();\r\n          return;\r\n        }\r\n\r\n        postAction(encryptedBody);\r\n      }, 2000);\r\n\r\n      onResponsedSucceed = function(response) {\r\n        resolve(response);\r\n      };\r\n\r\n      postAction(encryptedBody);\r\n    }).finally(() => {\r\n      clearInterval(intervalId);\r\n    })\r\n  };\r\n\r\n  this.destroy = function() {\r\n    clearInterval(intervalId);\r\n    socket.offMessage(onMessageCallback);\r\n    logger.info(TAG, 'destroy');\r\n  };\r\n};","var logger = require('./logger.js');\r\nconst DeviceMdnsDiscovery = require('./device-mdns-discovery.js');\r\nconst DeviceSmartLinkDiscovery = require('./device-smartlink-discovery.js');\r\n\r\nmodule.exports = function () {\r\n\r\n  var self = this;\r\n  var TAG = 'smartaplink_lib.commons.device-discovery.{0}:';\r\n  var deviceMdnsDiscovery = new DeviceMdnsDiscovery();\r\n  var deviceSmartLinkDiscovery = new DeviceSmartLinkDiscovery();\r\n  var discoveries = [deviceMdnsDiscovery, deviceSmartLinkDiscovery];\r\n  var discoveryDeviceStarted = false;\r\n\r\n  /**\r\n   * 启动发现设备\r\n   * object: {apSsid: string, onDeviceFound: function}\r\n   */\r\n  this.startDeviceDiscovery = function (object) {\r\n\r\n    if (discoveryDeviceStarted) {\r\n      logger.warn(TAG.format('startDeviceDiscovery'), 'device discovery was already started');\r\n      return;\r\n    }\r\n\r\n    discoveryDeviceStarted = true;\r\n    var devices = [];\r\n    var onDeviceFound = object['onDeviceFound'];\r\n    object['onDeviceFound'] = function (device) {\r\n\r\n      if (devices.indexOf(device.mac) === -1) {\r\n\r\n        devices.push(device.mac);\r\n\r\n        try {\r\n          onDeviceFound(device);\r\n        } catch (error) {\r\n          logger.error(TAG.format('startDeviceDiscovery'), error);\r\n        }\r\n      }\r\n    }\r\n\r\n    discoveries.forEach(discovery => {\r\n      discovery.startDeviceDiscovery(object);\r\n    });\r\n  }\r\n\r\n  this.stopDeviceDiscovery = function () {\r\n\r\n    discoveries.forEach(discovery => {\r\n      discovery.stopDeviceDiscovery();\r\n    });\r\n\r\n    discoveryDeviceStarted = false;\r\n  }\r\n};","const logger = require('./logger.js');\r\nconst utils = require('./utils.js');\r\n\r\nmodule.exports = function () {\r\n\r\n  var TAG = 'smartaplink_lib.commons.device-mDNS-discovery.{0}:'\r\n\r\n  var discoveryDeviceStarted = false;\r\n  var onLocalServiceFoundCallback = null;\r\n  var onLocalServiceDiscoveryStopCallback = null;\r\n\r\n  /**\r\n   * 启动发现设备\r\n   * object: {apSsid: string, onDeviceFound: function}\r\n   */\r\n  this.startDeviceDiscovery = function (object) {\r\n\r\n    if (discoveryDeviceStarted) {\r\n      logger.warn(TAG.format('startDeviceDiscovery'), 'device discovery was already started');\r\n      return;\r\n    }\r\n    discoveryDeviceStarted = true;\r\n    var devices = [];\r\n\r\n    if (onLocalServiceFoundCallback != null) {\r\n      wx.offLocalServiceFound(onLocalServiceFoundCallback);\r\n    }\r\n    onLocalServiceFoundCallback = function (res) {\r\n\r\n      logger.info(TAG.format('onLocalServiceFound'), JSON.stringify(res));\r\n\r\n      if (object && typeof object['onDeviceFound'] === 'function') {\r\n\r\n        var deviceInfos = res['serviceName'].split('`');;\r\n        if (deviceInfos.length < 3) {\r\n          return;\r\n        }\r\n\r\n        var mac = deviceInfos[0];\r\n        var mid = deviceInfos[1];\r\n        var apSsid = deviceInfos[2];\r\n        var ip = res['ip'];\r\n\r\n        if (devices.indexOf(mac) == -1 && apSsid === object['apSsid']) {\r\n\r\n          devices.push(mac);\r\n          var device = {\r\n            mid: mid,\r\n            mac: mac,\r\n            // apSsid: apSsid,\r\n            ip: ip\r\n          };\r\n          logger.log(TAG.format('onDeviceFound:'), JSON.stringify(device));\r\n\r\n          object['onDeviceFound'](device);\r\n        }\r\n      }\r\n    };\r\n    wx.onLocalServiceFound(onLocalServiceFoundCallback);\r\n\r\n    if (onLocalServiceDiscoveryStopCallback != null) {\r\n      wx.offLocalServiceDiscoveryStop(onLocalServiceDiscoveryStopCallback);\r\n    }\r\n    onLocalServiceDiscoveryStopCallback = function (res) {\r\n\r\n      logger.info(TAG.format('onLocalServiceDiscoveryStop'), JSON.stringify(res));\r\n      \r\n      if (discoveryDeviceStarted) {\r\n        localServiceDiscovery();\r\n      } else {\r\n        wx.offLocalServiceDiscoveryStop(onLocalServiceDiscoveryStopCallback);\r\n        onLocalServiceDiscoveryStopCallback = null;\r\n      }\r\n    };\r\n    wx.onLocalServiceDiscoveryStop(onLocalServiceDiscoveryStopCallback);\r\n\r\n    var localServiceDiscovery = function () {\r\n\r\n      if (!discoveryDeviceStarted) {\r\n        return;\r\n      }\r\n\r\n      wx.startLocalServiceDiscovery({\r\n        serviceType: '_hf._tcp.',\r\n        success: function (res) {\r\n          logger.log(TAG.format('findDevice'), 'startLocalServiceDiscovery success', JSON.stringify(res));\r\n        },\r\n        fail: function (res) {\r\n          logger.warn(TAG.format('findDevice'), 'startLocalServiceDiscovery fail', JSON.stringify(res));\r\n\r\n          if (res['errMsg'].indexOf('scan task already exist') == -1) {\r\n            setTimeout(localServiceDiscovery, 3000);\r\n          }\r\n        }\r\n      });\r\n    };\r\n\r\n    localServiceDiscovery();\r\n  }\r\n\r\n  /**\r\n   * 停止发现设备\r\n   */\r\n  this.stopDeviceDiscovery = function () {\r\n\r\n    discoveryDeviceStarted = false;\r\n\r\n    wx.stopLocalServiceDiscovery({\r\n      serviceType: '_hf._tcp.',\r\n      complete: function (res) {\r\n        logger.log(TAG.format('stopDeviceDiscovery'), 'stopLocalServiceDiscovery complete', JSON.stringify(res));\r\n\r\n        if (onLocalServiceFoundCallback != null) {\r\n          wx.offLocalServiceFound(onLocalServiceFoundCallback);\r\n          onLocalServiceFoundCallback = null;\r\n        }\r\n      }\r\n    });\r\n  }\r\n};","const Unibabel = require('browserify-unibabel');\r\nconst utils = require('./utils.js');\r\nconst logger = require('./logger.js');\r\nconst Constant = require('./constant.js');\r\n\r\nmodule.exports = function () {\r\n\r\n  var TAG = 'smartaplink_lib.commons.device-smartlink-discovery.{0}:'\r\n\r\n  var discoveryDeviceStarted = false;\r\n  var socket = null;\r\n  var intervalId = null;\r\n\r\n  /**\r\n   * 启动发现设备\r\n   * object: {apSsid: string, onDeviceFound: function}\r\n   */\r\n  this.startDeviceDiscovery = function (object) {\r\n\r\n    if (discoveryDeviceStarted) {\r\n      logger.warn(TAG.format('startDeviceDiscovery'), 'device discovery was already started');\r\n      return;\r\n    }\r\n\r\n    logger.info(TAG.format('startDeviceDiscovery'));\r\n    discoveryDeviceStarted = true;\r\n    var devices = [];\r\n\r\n    socket = wx.createUDPSocket();\r\n    socket.onMessage(function (res) {\r\n\r\n      var uint8Array = new Uint8Array(res['message']);\r\n      var message = Unibabel.utf8ArrToStr(uint8Array).trim();\r\n      res['messageText'] = message;\r\n      logger.log(TAG.format('socket.onMessage:'), JSON.stringify(res));\r\n\r\n      var prefix = 'smart_config';\r\n      if (message.startsWith(prefix)) {\r\n\r\n        var resultTexts = message.substr(prefix.length).trim();\r\n        var resultItems = resultTexts.split('##');\r\n        var mac = resultItems[0];\r\n        if (utils.isNotBlank(mac) && devices.indexOf(mac) == -1) {\r\n\r\n          devices.push(mac);\r\n\r\n          var mid = resultItems.length > 1 && utils.isNotBlank(resultItems[1]) ? resultItems[1] : resultItems[0];\r\n          var device = {\r\n            mid: mid,\r\n            mac: mac,\r\n            ip: res['remoteInfo']['address']\r\n          };\r\n          logger.log(TAG.format('onDeviceFound:'), JSON.stringify(device));\r\n\r\n          object['onDeviceFound'](device);\r\n        }\r\n      } else {\r\n\r\n        try {\r\n\r\n          var json = JSON.parse(message);\r\n          if (json != null && utils.isNotBlank(json['mac']) && devices.indexOf(json['mac']) == -1) {\r\n\r\n            devices.push(json['mac']);\r\n\r\n            var device = {\r\n              mid: json['mid'],\r\n              mac: json['mac'],\r\n              ip: json['ip']\r\n            };\r\n            logger.log(TAG.format('onDeviceFound:'), JSON.stringify(device));\r\n\r\n            object['onDeviceFound'](device);\r\n          }\r\n        } catch (error) {\r\n          logger.error(TAG.format('socket.onMessage:'), error);\r\n        }\r\n      }\r\n    });\r\n    socket.bind(Constant.smartConfigPort);\r\n\r\n    intervalId = setInterval(function () {\r\n\r\n      socket.send({\r\n        address: Constant.udpBroadcastIp,\r\n        port: Constant.smartLinkFindPort,\r\n        message: 'smartlinkfind'\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n\r\n  /**\r\n   * 停止发现设备\r\n   */\r\n  this.stopDeviceDiscovery = function () {\r\n\r\n    logger.info(TAG.format('stopDeviceDiscovery'));\r\n\r\n    clearInterval(intervalId);\r\n    socket.close();\r\n    discoveryDeviceStarted = false;\r\n  }\r\n};","module.exports = {\r\n  smartLinkFindPort: 48899,\r\n  smartConfigPort: 49999,\r\n  udpBroadcastIp: '255.255.255.255',\r\n}"]}